/* .ProseMirror * {
  max-width: 64rem !important;
} */

.ProseMirror .is-empty::before {
    --tw-text-opacity: 1;
    color: rgb(115 115 115 / var(--tw-text-opacity));
  }

.ProseMirror :is(.dark .is-empty)::before {
    --tw-text-opacity: 1;
    color: rgb(163 163 163 / var(--tw-text-opacity));
  }

.ProseMirror > *:first-child:first-child,
  .ProseMirror [data-type="column"] > *:first-child {
    margin-top: 0px;
  }

.ProseMirror > *:first-child:last-child,
  .ProseMirror [data-type="column"] > *:last-child {
    margin-bottom: 0px;
  }

.ProseMirror > * + * {
    margin-top: 0.75em;
  }

.ProseMirror .node-imageUpload {
    border-radius: 0.25rem;
    border-width: 2px;
    border-style: dotted;
    border-color: rgb(0 0 0 / var(--tw-border-opacity));
    --tw-border-opacity: 0.1;
    padding: 0.5rem;
  }

.ProseMirror :is(.dark .node-imageUpload) {
    --tw-border-opacity: 1;
    border-color: rgb(115 115 115 / var(--tw-border-opacity));
  }

.ProseMirror .node-imageUpload {
    transition: border 160ms cubic-bezier(0.45, 0.05, 0.55, 0.95);
  }

.ProseMirror .node-imageUpload:hover {
      --tw-border-opacity: 0.3;
    }

.ProseMirror .node-imageUpload:has(.is-active),
    .ProseMirror .node-imageUpload.has-focus {
      --tw-border-opacity: 0.4;
    }

.ProseMirror [data-type="columns"].has-focus [data-type="column"],
    .ProseMirror [data-type="columns"]:hover [data-type="column"] {
      --tw-border-opacity: 1;
      border-color: rgb(212 212 212 / var(--tw-border-opacity));
    }

:is(.dark .ProseMirror [data-type="columns"].has-focus [data-type="column"]),:is(.dark 
    .ProseMirror [data-type="columns"]:hover [data-type="column"]) {
      --tw-border-opacity: 1;
      border-color: rgb(64 64 64 / var(--tw-border-opacity));
    }

.ProseMirror [data-type="columns"] [data-type="column"].has-focus {
      --tw-border-opacity: 1;
      border-color: rgb(163 163 163 / var(--tw-border-opacity));
    }

.ProseMirror [data-type="columns"] :is(.dark [data-type="column"].has-focus) {
      --tw-border-opacity: 1;
      border-color: rgb(82 82 82 / var(--tw-border-opacity));
    }

.ProseMirror [data-type="column"] {
    border-radius: 0.25rem;
    border-width: 2px;
    border-style: dotted;
    border-color: transparent;
    padding: 0.25rem;
    transition: border 160ms cubic-bezier(0.45, 0.05, 0.55, 0.95);
  }

.ProseMirror [data-type="column"]:hover {
      --tw-border-opacity: 1;
      border-color: rgb(245 245 245 / var(--tw-border-opacity));
    }

:is(.dark .ProseMirror [data-type="column"]:hover) {
      --tw-border-opacity: 1;
      border-color: rgb(23 23 23 / var(--tw-border-opacity));
    }

.ProseMirror [data-type="column"]:has(.is-active),
    .ProseMirror [data-type="column"].has-focus {
      --tw-border-opacity: 1;
      border-color: rgb(245 245 245 / var(--tw-border-opacity));
    }

:is(.dark .ProseMirror [data-type="column"]:has(.is-active)),:is(.dark 
    .ProseMirror [data-type="column"].has-focus) {
      --tw-border-opacity: 1;
      border-color: rgb(23 23 23 / var(--tw-border-opacity));
    }

.ProseMirror .node-imageBlock img {
      overflow: hidden;
      border-radius: 0.75rem;
      border-width: 2px;
      border-color: transparent;
    }

.ProseMirror .node-imageBlock:hover img {
      border-width: 2px;
      --tw-border-opacity: 1;
      border-color: rgb(245 245 245 / var(--tw-border-opacity));
    }

:is(.dark .ProseMirror .node-imageBlock:hover img) {
      --tw-border-opacity: 1;
      border-color: rgb(23 23 23 / var(--tw-border-opacity));
    }

.ProseMirror .node-imageBlock:has(.is-active) img,
    .ProseMirror .node-imageBlock.has-focus img {
      border-width: 2px;
      --tw-border-opacity: 1;
      border-color: rgb(38 38 38 / var(--tw-border-opacity));
    }

:is(.dark .ProseMirror .node-imageBlock:has(.is-active) img),:is(.dark 
    .ProseMirror .node-imageBlock.has-focus img) {
      --tw-border-opacity: 1;
      border-color: rgb(229 229 229 / var(--tw-border-opacity));
    }

.ProseMirror .node-aiWriter.has-focus [data-node-view-wrapper] > *, .ProseMirror .node-aiImage.has-focus [data-node-view-wrapper] > *, .ProseMirror .node-tableOfContentsNode.has-focus [data-node-view-wrapper] > * {
      border-radius: var(--radius);
      --tw-shadow: 0 0 0 2px;
      --tw-shadow-colored: 0 0 0 2px var(--tw-shadow-color);
      box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
      --tw-shadow-color: rgb(0 0 0 / 0.3);
      --tw-shadow: var(--tw-shadow-colored);
      transition-property: all;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      transition-duration: 150ms;
    }

:is(.dark .ProseMirror .node-aiWriter.has-focus [data-node-view-wrapper] > *), :is(.dark .ProseMirror .node-aiImage.has-focus [data-node-view-wrapper] > *), :is(.dark .ProseMirror .node-tableOfContentsNode.has-focus [data-node-view-wrapper] > *) {
      --tw-shadow-color: rgb(255 255 255 / 0.3);
      --tw-shadow: var(--tw-shadow-colored);
    }

.ProseMirror .ProseMirror-gapcursor + .node-imageBlock,
  .ProseMirror .ProseMirror-gapcursor + .node-imageUpload,
  .ProseMirror .ProseMirror-gapcursor + [data-type="blockquoteFigure"] {
    outline-color: #404040;
  }

.ProseMirror .ProseMirror-gapcursor + .node-imageBlock:hover,
  .ProseMirror .ProseMirror-gapcursor + .node-imageUpload:hover,
  .ProseMirror .ProseMirror-gapcursor + [data-type="blockquoteFigure"]:hover {
    outline-color: #525252;
  }

.ProseMirror :is(.dark .ProseMirror-gapcursor + .node-imageBlock),.ProseMirror :is(.dark 
  .ProseMirror-gapcursor + .node-imageUpload),.ProseMirror :is(.dark 
  .ProseMirror-gapcursor + [data-type="blockquoteFigure"]) {
    outline-color: #d4d4d4;
  }

.ProseMirror :is(.dark .ProseMirror-gapcursor + .node-imageBlock:hover),.ProseMirror :is(.dark 
  .ProseMirror-gapcursor + .node-imageUpload:hover),.ProseMirror :is(.dark 
  .ProseMirror-gapcursor + [data-type="blockquoteFigure"]:hover) {
    outline-color: #a3a3a3;
  }

.ProseMirror [data-type="blockquoteFigure"] > div {
    border-radius: var(--radius);
    border-top-left-radius: 0px;
    border-bottom-left-radius: 0px;
    border-left-width: 4px;
    --tw-border-opacity: 1;
    border-left-color: rgb(64 64 64 / var(--tw-border-opacity));
    --tw-bg-opacity: 0.8;
    padding-top: 0.5rem;
    padding-bottom: 0.5rem;
    padding-left: 1rem;
    padding-right: 1rem;
  }

.ProseMirror :is(.dark [data-type="blockquoteFigure"] > div) {
    --tw-border-opacity: 1;
    border-left-color: rgb(212 212 212 / var(--tw-border-opacity));
  }

.ProseMirror [data-type="blockquoteFigure"] > blockquote {
    font-size: 1.125rem;
    line-height: 1.75rem;
    --tw-text-opacity: 1;
    color: rgb(0 0 0 / var(--tw-text-opacity));
  }

.ProseMirror :is(.dark [data-type="blockquoteFigure"] > blockquote) {
    --tw-text-opacity: 1;
    color: rgb(255 255 255 / var(--tw-text-opacity));
  }

.ProseMirror [data-type="blockquoteFigure"] figcaption {
    margin-top: 1rem;
    overflow: hidden;
    font-size: 0.875rem;
    line-height: 1.25rem;
    --tw-text-opacity: 1;
    color: rgb(115 115 115 / var(--tw-text-opacity));
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
  }

.ProseMirror :is(.dark [data-type="blockquoteFigure"] figcaption) {
    --tw-text-opacity: 1;
    color: rgb(163 163 163 / var(--tw-text-opacity));
  }

/* .spinner-animation {
  animation: spinner 1.6s linear infinite;
  animation-delay: -1.6s;
}

.spinner-animation-secondary {
  animation-delay: -1s;
}

@keyframes spinner {
  12.5 % {
    x: 13px;
    y: 1px;
  }
  25% {
    x: 13px;
    y: 1px;
  }
  37.5% {
    x: 13px;
    y: 13px;
  }
  50% {
    x: 13px;
    y: 13px;
  }
  62.5% {
    x: 1px;
    y: 13px;
  }
  75% {
    x: 1px;
    y: 13px;
  }
  87.5% {
    x: 1px;
    y: 1px;
  }
} */

/* Image Block */

.ProseMirror figure[data-type="imageBlock"] {
    margin: 0px;
  }

.ProseMirror figure[data-type="imageBlock"] img {
      display: block;
      width: 100%;
      border-radius: 0.25rem;
    }

/* Block Quote */

.ProseMirror figure[data-type="blockquoteFigure"] {
    margin-top: 3.5rem;
    margin-bottom: 3.5rem;
    --tw-text-opacity: 1;
    color: rgb(0 0 0 / var(--tw-text-opacity));
  }

.ProseMirror :is(.dark figure[data-type="blockquoteFigure"]) {
    --tw-text-opacity: 1;
    color: rgb(255 255 255 / var(--tw-text-opacity));
  }

.ProseMirror > blockquote blockquote, .ProseMirror [data-type="blockquoteFigure"] blockquote {
      margin: 0px;
    }

.ProseMirror > blockquote blockquote > *:first-child, .ProseMirror [data-type="blockquoteFigure"] blockquote > *:first-child {
        margin-top: 0px;
      }

.ProseMirror > blockquote blockquote > *:last-child, .ProseMirror [data-type="blockquoteFigure"] blockquote > *:last-child {
        margin-bottom: 0px;
      }

/* Columns */

.ProseMirror [data-type="columns"] {
    margin-top: 3.5rem;
    margin-bottom: 3rem;
    display: grid;
    gap: 1rem;
  }

.ProseMirror [data-type="columns"].layout-sidebar-left {
      grid-template-columns: 40fr 60fr;
    }

.ProseMirror [data-type="columns"].layout-sidebar-right {
      grid-template-columns: 60fr 40fr;
    }

.ProseMirror [data-type="columns"].layout-two-column {
      grid-template-columns: 1fr 1fr;
    }

.ProseMirror [data-type="column"] {
    overflow: auto;
  }

.ProseMirror code {
    border-radius: calc(var(--radius) - 4px);
    --tw-bg-opacity: 1;
    background-color: rgb(23 23 23 / var(--tw-bg-opacity));
    font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
    --tw-text-opacity: 1;
    color: rgb(255 255 255 / var(--tw-text-opacity));
    caret-color: #fff;
    --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
    --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  }

.ProseMirror code::-moz-selection {
      background-color: rgb(255 255 255 / 0.3);
    }

.ProseMirror code::selection {
      background-color: rgb(255 255 255 / 0.3);
    }

.ProseMirror pre {
    margin-top: 3rem;
    margin-bottom: 3rem;
    border-radius: 0.25rem;
    border-width: 1px;
    --tw-border-opacity: 1;
    border-color: rgb(0 0 0 / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: rgb(64 64 64 / var(--tw-bg-opacity));
    padding: 1rem;
    --tw-text-opacity: 1;
    color: rgb(255 255 255 / var(--tw-text-opacity));
    caret-color: #fff;
  }

.ProseMirror :is(.dark pre) {
    --tw-border-opacity: 1;
    border-color: rgb(38 38 38 / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: rgb(23 23 23 / var(--tw-bg-opacity));
  }

.ProseMirror pre *::-moz-selection {
      background-color: rgb(255 255 255 / 0.2);
    }

.ProseMirror pre *::selection {
      background-color: rgb(255 255 255 / 0.2);
    }

.ProseMirror pre code {
      background-color: inherit;
      padding: 0px;
      color: inherit;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-colored: 0 0 #0000;
      box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
    }

.ProseMirror pre .hljs-comment,
    .ProseMirror pre .hljs-quote {
      --tw-text-opacity: 1;
      color: rgb(163 163 163 / var(--tw-text-opacity));
    }

.ProseMirror pre .hljs-variable,
    .ProseMirror pre .hljs-template-variable,
    .ProseMirror pre .hljs-attribute,
    .ProseMirror pre .hljs-tag,
    .ProseMirror pre .hljs-name,
    .ProseMirror pre .hljs-regexp,
    .ProseMirror pre .hljs-link,
    .ProseMirror pre .hljs-name,
    .ProseMirror pre .hljs-selector-id,
    .ProseMirror pre .hljs-selector-class {
      --tw-text-opacity: 1;
      color: rgb(252 165 165 / var(--tw-text-opacity));
    }

.ProseMirror pre .hljs-number,
    .ProseMirror pre .hljs-meta,
    .ProseMirror pre .hljs-built_in,
    .ProseMirror pre .hljs-builtin-name,
    .ProseMirror pre .hljs-literal,
    .ProseMirror pre .hljs-type,
    .ProseMirror pre .hljs-params {
      --tw-text-opacity: 1;
      color: rgb(253 186 116 / var(--tw-text-opacity));
    }

.ProseMirror pre .hljs-string,
    .ProseMirror pre .hljs-symbol,
    .ProseMirror pre .hljs-bullet {
      --tw-text-opacity: 1;
      color: rgb(190 242 100 / var(--tw-text-opacity));
    }

.ProseMirror pre .hljs-title,
    .ProseMirror pre .hljs-section {
      --tw-text-opacity: 1;
      color: rgb(253 224 71 / var(--tw-text-opacity));
    }

.ProseMirror pre .hljs-keyword,
    .ProseMirror pre .hljs-selector-tag {
      --tw-text-opacity: 1;
      color: rgb(94 234 212 / var(--tw-text-opacity));
    }

.ProseMirror pre .hljs-emphasis {
      font-style: italic;
    }

.ProseMirror pre .hljs-strong {
      font-weight: 700;
    }

.ProseMirror .collaboration-cursor__caret {
      pointer-events: none;
      position: relative;
      margin-left: -1px;
      margin-right: -1px;
      overflow-wrap: normal;
      word-break: normal;
      border-right-width: 1px;
      border-left-width: 1px;
      --tw-border-opacity: 1;
      border-color: rgb(0 0 0 / var(--tw-border-opacity));
    }

.ProseMirror .collaboration-cursor__label {
      position: absolute;
      left: -1px;
      top: -1.4em;
      -webkit-user-select: none;
         -moz-user-select: none;
              user-select: none;
      white-space: nowrap;
      border-radius: 0.25rem;
      border-top-left-radius: 0px;
      padding-top: 0.125rem;
      padding-bottom: 0.125rem;
      padding-left: 0.375rem;
      padding-right: 0.375rem;
      font-size: 0.75rem;
      line-height: 1rem;
      font-weight: 600;
      line-height: 1;
      --tw-text-opacity: 1;
      color: rgb(0 0 0 / var(--tw-text-opacity));
    }

.ProseMirror ol {
    list-style-type: decimal;
  }

.ProseMirror ul {
    list-style-type: disc;
  }

.ProseMirror ul,
  .ProseMirror ol {
    margin-top: 1.5rem;
    margin-bottom: 1.5rem;
    padding-top: 0px;
    padding-bottom: 0px;
    padding-left: 2rem;
    padding-right: 2rem;
  }

.ProseMirror ul:first-child,
  .ProseMirror ol:first-child {
    margin-top: 0px;
  }

.ProseMirror ul:last-child,
  .ProseMirror ol:last-child {
    margin-bottom: 0px;
  }

.ProseMirror ul ul,
    .ProseMirror ul ol,
    .ProseMirror ul li,
    .ProseMirror ol ul,
    .ProseMirror ol ol,
    .ProseMirror ol li {
      margin-top: 0.25rem;
      margin-bottom: 0.25rem;
    }

.ProseMirror ul p, .ProseMirror ol p {
      margin-top: 0px;
      margin-bottom: 0.25rem;
    }

.ProseMirror > ul,
  .ProseMirror > ol {
    margin-top: 2rem;
    margin-bottom: 2rem;
  }

.ProseMirror > ul:first-child,
  .ProseMirror > ol:first-child {
    margin-top: 0px;
  }

.ProseMirror > ul:last-child,
  .ProseMirror > ol:last-child {
    margin-bottom: 0px;
  }

.ProseMirror ul[data-type="taskList"] {
    list-style-type: none;
    padding: 0px;
  }

.ProseMirror ul[data-type="taskList"] p {
      margin: 0px;
    }

.ProseMirror ul[data-type="taskList"] li {
      display: flex;
    }

.ProseMirror ul[data-type="taskList"] li > label {
        margin-top: 0.25rem;
        margin-right: 0.5rem;
        flex: 1 1 auto;
        flex-shrink: 0;
        flex-grow: 0;
        -webkit-user-select: none;
           -moz-user-select: none;
                user-select: none;
      }

.ProseMirror ul[data-type="taskList"] li > div {
        flex: 1 1 auto;
      }

.ProseMirror ul[data-type="taskList"] li[data-checked="true"] {
        text-decoration-line: line-through;
      }

/* Placeholder Styles */

.ProseMirror .is-empty::before {
    pointer-events: none;
    float: left;
    height: 0px;
    width: 100%;
    color: rgb(0 0 0 / 0.4);
  }

.ProseMirror :is(.dark .is-empty)::before {
    color: rgb(255 255 255 / 0.4);
  }

/* Slashmenu Placeholder */

.ProseMirror.ProseMirror-focused > p.has-focus.is-empty::before {
      content: "Type  /  to browse options";
    }

.ProseMirror.ProseMirror-focused > [data-type="columns"]
      > [data-type="column"]
      > p.is-empty.has-focus::before {
      content: "Type  /  to browse options";
    }

/* Default Placeholder */

.ProseMirror > .is-editor-empty::before {
    content: "Click here to start writing …";
  }

/* Blockquote Placeholder */

.ProseMirror blockquote .is-empty:not(.is-editor-empty):first-child:last-child::before {
    content: "Enter a quote";
  }

.ProseMirror blockquote + figcaption.is-empty:not(.is-editor-empty)::before {
    content: "Author";
  }

.ProseMirror [data-placeholder][data-suggestion]::before,
  .ProseMirror [data-placeholder][data-suggestion] *::before {
    content: none !important;
  }

.ProseMirror .tableWrapper {
    margin-top: 3rem;
    margin-bottom: 3rem;
  }

.ProseMirror table {
    box-sizing: border-box;
    width: 100%;
    border-collapse: collapse;
    border-radius: 0.25rem;
    border-color: rgb(0 0 0 / 0.1);
  }

.ProseMirror :is(.dark table) {
    border-color: rgb(255 255 255 / 0.2);
  }

.ProseMirror table td,
    .ProseMirror table th {
      position: relative;
      min-width: 100px;
      border-width: 1px;
      border-color: rgb(0 0 0 / 0.1);
      padding: 0.5rem;
      text-align: left;
      vertical-align: top;
    }

.ProseMirror table :is(.dark td),.ProseMirror table :is(.dark 
    th) {
      border-color: rgb(255 255 255 / 0.2);
    }

.ProseMirror table td:first-of-type:not(a), .ProseMirror table th:first-of-type:not(a) {
        margin-top: 0px;
      }

.ProseMirror table td p, .ProseMirror table th p {
        margin: 0px;
      }

.ProseMirror table td p + p, .ProseMirror table th p + p {
          margin-top: 0.75rem;
        }

.ProseMirror table th {
      font-weight: 700;
    }

.ProseMirror table .column-resize-handle {
      pointer-events: none;
      position: absolute;
      bottom: -2px;
      right: -0.25rem;
      top: 0px;
      display: flex;
      width: 0.5rem;
    }

.ProseMirror table .column-resize-handle::before {
        margin-left: 0.5rem;
        height: 100%;
        width: 1px;
        background-color: rgb(0 0 0 / 0.2);
      }

:is(.dark .ProseMirror table .column-resize-handle)::before {
        background-color: rgb(255 255 255 / 0.2);
      }

.ProseMirror table .column-resize-handle::before {
        content: "";
      }

.ProseMirror table .selectedCell {
      border-style: double;
      border-color: rgb(0 0 0 / 0.2);
      background-color: rgb(0 0 0 / 0.05);
    }

.ProseMirror table :is(.dark .selectedCell) {
      border-color: rgb(255 255 255 / 0.2);
      background-color: rgb(255 255 255 / 0.1);
    }

.ProseMirror table .grip-column,
    .ProseMirror table .grip-row {
      position: absolute;
      z-index: 10;
      display: flex;
      cursor: pointer;
      align-items: center;
      justify-content: center;
      background-color: rgb(0 0 0 / 0.05);
    }

.ProseMirror table :is(.dark .grip-column),.ProseMirror table :is(.dark 
    .grip-row) {
      background-color: rgb(255 255 255 / 0.1);
    }

.ProseMirror table .grip-column {
      left: 0px;
      top: -0.75rem;
      margin-left: -1px;
      height: 0.75rem;
      width: calc(100% + 1px);
      border-left-width: 1px;
      border-color: rgb(0 0 0 / 0.2);
    }

.ProseMirror table :is(.dark .grip-column) {
      border-color: rgb(255 255 255 / 0.2);
    }

.ProseMirror table .grip-column:hover::before, .ProseMirror table .grip-column.selected::before {
          content: "";
          width: 0.625rem;
        }

.ProseMirror table .grip-column:hover {
        background-color: rgb(0 0 0 / 0.1);
      }

:is(.dark .ProseMirror table .grip-column:hover) {
        background-color: rgb(255 255 255 / 0.2);
      }

.ProseMirror table .grip-column:hover::before {
          border-bottom-width: 2px;
          border-style: dotted;
          border-color: rgb(0 0 0 / 0.6);
        }

:is(.dark .ProseMirror table .grip-column:hover)::before {
          border-color: rgb(255 255 255 / 0.6);
        }

.ProseMirror table .grip-column.first {
        border-top-left-radius: calc(var(--radius) - 4px);
        border-color: transparent;
      }

.ProseMirror table .grip-column.last {
        border-top-right-radius: calc(var(--radius) - 4px);
      }

.ProseMirror table .grip-column.selected {
        border-color: rgb(0 0 0 / 0.3);
        background-color: rgb(0 0 0 / 0.3);
        --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
        --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
        box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
      }

:is(.dark .ProseMirror table .grip-column.selected) {
        border-color: rgb(255 255 255 / 0.3);
        background-color: rgb(255 255 255 / 0.3);
      }

.ProseMirror table .grip-column.selected::before {
          border-bottom-width: 2px;
          border-style: dotted;
        }

.ProseMirror table .grip-row {
      left: -0.75rem;
      top: 0px;
      margin-top: -1px;
      height: calc(100% + 1px);
      width: 0.75rem;
      border-top-width: 1px;
      border-color: rgb(0 0 0 / 0.2);
    }

.ProseMirror table :is(.dark .grip-row) {
      border-color: rgb(255 255 255 / 0.2);
    }

.ProseMirror table .grip-row:hover::before, .ProseMirror table .grip-row.selected::before {
          height: 0.625rem;
          content: "";
        }

.ProseMirror table .grip-row:hover {
        background-color: rgb(0 0 0 / 0.1);
      }

:is(.dark .ProseMirror table .grip-row:hover) {
        background-color: rgb(255 255 255 / 0.2);
      }

.ProseMirror table .grip-row:hover::before {
          border-left-width: 2px;
          border-style: dotted;
          border-color: rgb(0 0 0 / 0.6);
        }

:is(.dark .ProseMirror table .grip-row:hover)::before {
          border-color: rgb(255 255 255 / 0.6);
        }

.ProseMirror table .grip-row.first {
        border-top-left-radius: calc(var(--radius) - 4px);
        border-color: transparent;
      }

.ProseMirror table .grip-row.last {
        border-bottom-left-radius: calc(var(--radius) - 4px);
      }

.ProseMirror table .grip-row.selected {
        border-color: rgb(0 0 0 / 0.3);
        background-color: rgb(0 0 0 / 0.3);
        --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
        --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
        box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
      }

:is(.dark .ProseMirror table .grip-row.selected) {
        border-color: rgb(255 255 255 / 0.3);
        background-color: rgb(255 255 255 / 0.3);
      }

.ProseMirror table .grip-row.selected::before {
          border-left-width: 2px;
          border-style: dotted;
        }

.ProseMirror p {
    margin-top: 0.75rem;
    margin-bottom: 0.75rem;
    line-height: 1.625;
  }

.ProseMirror p:first-child {
    margin-top: 0px;
  }

.ProseMirror p:last-child {
    margin-bottom: 0px;
  }

.ProseMirror > p {
    margin-top: 1.5rem;
    margin-bottom: 1.5rem;
  }

.ProseMirror > p:first-child {
    margin-top: 0px;
  }

.ProseMirror > p:last-child {
    margin-bottom: 0px;
  }

.ProseMirror h1 {
    font-size: 1.875rem;
    line-height: 2.25rem;
  }

.ProseMirror h2 {
    font-size: 1.5rem;
    line-height: 2rem;
  }

.ProseMirror h3 {
    font-size: 1.25rem;
    line-height: 1.75rem;
  }

.ProseMirror h4 {
    font-size: 1.125rem;
    line-height: 1.75rem;
  }

.ProseMirror h5 {
    font-size: 1rem;
    line-height: 1.5rem;
  }

.ProseMirror h6 {
    font-size: 0.875rem;
    line-height: 1.25rem;
  }

.ProseMirror h1,
  .ProseMirror h2,
  .ProseMirror h3,
  .ProseMirror h4,
  .ProseMirror h5,
  .ProseMirror h6 {
    font-weight: 700;
  }

.ProseMirror h1:first-child,
  .ProseMirror h2:first-child,
  .ProseMirror h3:first-child,
  .ProseMirror h4:first-child,
  .ProseMirror h5:first-child,
  .ProseMirror h6:first-child {
    margin-top: 0px;
  }

.ProseMirror h1:last-child,
  .ProseMirror h2:last-child,
  .ProseMirror h3:last-child,
  .ProseMirror h4:last-child,
  .ProseMirror h5:last-child,
  .ProseMirror h6:last-child {
    margin-bottom: 0px;
  }

.ProseMirror h1,
  .ProseMirror h2,
  .ProseMirror h3 {
    margin-top: 3rem;
  }

.ProseMirror h4,
  .ProseMirror h5,
  .ProseMirror h6 {
    margin-top: 2rem;
  }

.ProseMirror a.link {
    font-weight: 800;
    --tw-text-opacity: 1;
    color: rgb(59 130 246 / var(--tw-text-opacity));
  }

.ProseMirror :is(.dark a.link) {
    --tw-text-opacity: 1;
    color: rgb(96 165 250 / var(--tw-text-opacity));
  }

.ProseMirror mark {
    border-radius: calc(var(--radius) - 4px);
    --tw-bg-opacity: 1;
    background-color: rgb(239 68 68 / var(--tw-bg-opacity));
    -webkit-box-decoration-break: clone;
            box-decoration-break: clone;
    padding-top: 0.25rem;
    padding-bottom: 0.25rem;
    padding-left: 0px;
    padding-right: 0px;
    color: inherit;
  }

.ProseMirror :is(.dark mark) {
    --tw-bg-opacity: 1;
    background-color: rgb(248 113 113 / var(--tw-bg-opacity));
  }

.ProseMirror img {
    height: auto;
    width: 100%;
    max-width: 100%;
  }

.ProseMirror [data-type="horizontalRule"] {
    margin-top: 2rem;
    margin-bottom: 2rem;
    cursor: pointer;
    padding-top: 1rem;
    padding-bottom: 1rem;
    transition-property: all;
    transition-duration: 100ms;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    animation-duration: 100ms;
    animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  }

.ProseMirror [data-type="horizontalRule"].ProseMirror-selectednode {
      background-color: rgb(0 0 0 / 0.05);
    }

:is(.dark .ProseMirror [data-type="horizontalRule"].ProseMirror-selectednode) {
      background-color: rgb(255 255 255 / 0.1);
    }

.ProseMirror [data-type="horizontalRule"].ProseMirror-selectednode hr {
        border-top-color: rgb(0 0 0 / 0.3);
      }

.ProseMirror [data-type="horizontalRule"].ProseMirror-selectednode :is(.dark hr) {
        border-top-color: rgb(255 255 255 / 0.3);
      }

.ProseMirror [data-type="horizontalRule"]:hover:not(.ProseMirror [data-type="horizontalRule"].ProseMirror-selectednode) {
      background-color: rgb(0 0 0 / 0.05);
    }

:is(.dark .ProseMirror [data-type="horizontalRule"]:hover:not(.ProseMirror [data-type="horizontalRule"].ProseMirror-selectednode)) {
      background-color: rgb(255 255 255 / 0.1);
    }

.ProseMirror [data-type="horizontalRule"] hr {
      border-width: 0px;
      border-top-width: 1px;
      border-color: rgb(0 0 0 / 0.2);
      background-color: rgb(0 0 0 / 0.8);
    }

.ProseMirror [data-type="horizontalRule"] :is(.dark hr) {
      border-color: rgb(255 255 255 / 0.2);
      background-color: rgb(255 255 255 / 0.8);
    }

.ProseMirror {
  z-index: 0;
  padding-top: 4rem;
  padding-bottom: 4rem;
  padding-right: 2rem;
  padding-left: 5rem;
  caret-color: #000;
  outline-width: 0px;
}

:is(.dark .ProseMirror) {
  caret-color: #fff;
}

@media (min-width: 1024px) {
  .ProseMirror {
    padding-left: 2rem;
    padding-right: 2rem;
  }
}

.ProseMirror > * {
    margin-left: auto;
    margin-right: auto;
    max-width: 42rem;
  }

.ProseMirror .selection {
    display: inline;
  }

.ProseMirror *::-moz-selection {
    background-color: rgb(0 0 0 / 0.1);
  }

.ProseMirror .selection,
  .ProseMirror *::selection {
    background-color: rgb(0 0 0 / 0.1);
  }

.ProseMirror :is(.dark 
  *)::-moz-selection {
    background-color: rgb(255 255 255 / 0.2);
  }

.ProseMirror :is(.dark .selection),.ProseMirror :is(.dark 
  *)::selection {
    background-color: rgb(255 255 255 / 0.2);
  }

.ProseMirror > .react-renderer {
    margin-top: 3rem;
    margin-bottom: 3rem;
  }

.ProseMirror > .react-renderer:first-child {
    margin-top: 0px;
  }

.ProseMirror > .react-renderer:last-child {
    margin-bottom: 0px;
  }

.ProseMirror.resize-cursor {
    cursor: col-resize;
  }

.ProseMirror .ProseMirror-gapcursor {
    position: relative;
    margin-left: auto;
    margin-right: auto;
    width: 100%;
    max-width: 42rem;
  }

.ProseMirror .ProseMirror-gapcursor:after {
      top: -1.5em;
      left: 0px;
      right: 0px;
      margin-left: auto;
      margin-right: auto;
      width: 100%;
      max-width: 42rem;
      border-top-color: rgb(0 0 0 / 0.4);
    }

:is(.dark .ProseMirror .ProseMirror-gapcursor):after {
      border-top-color: rgb(255 255 255 / 0.4);
    }

[data-theme="slash-command"] {
  width: 1000vw;
}

/* ! tailwindcss v3.4.1 | MIT License | https://tailwindcss.com */

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: Inter, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
  -webkit-tap-highlight-color: transparent;
  /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden] {
  display: none;
}

:root {
  --background: 0 0% 100%;
  --foreground: 240 10% 3.9%;
  --card: 0 0% 100%;
  --card-foreground: 240 10% 3.9%;
  --popover: 0 0% 100%;
  --popover-foreground: 240 10% 3.9%;
  --primary: 142.1 76.2% 36.3%;
  --primary-foreground: 355.7 100% 97.3%;
  --secondary: 240 4.8% 95.9%;
  --secondary-foreground: 240 5.9% 10%;
  --muted: 240 4.8% 95.9%;
  --muted-foreground: 240 3.8% 46.1%;
  --accent: 240 4.8% 95.9%;
  --accent-foreground: 240 5.9% 10%;
  --destructive: 0 84.2% 60.2%;
  --destructive-foreground: 0 0% 98%;
  --border: 240 5.9% 90%;
  --input: 240 5.9% 90%;
  --ring: 142.1 76.2% 36.3%;
  --radius: 0.5rem;
}

.dark {
  --background: 20 14.3% 4.1%;
  --foreground: 0 0% 95%;
  --card: 24 9.8% 10%;
  --card-foreground: 0 0% 95%;
  --popover: 0 0% 9%;
  --popover-foreground: 0 0% 95%;
  --primary: 142.1 70.6% 45.3%;
  --primary-foreground: 144.9 80.4% 10%;
  --secondary: 240 3.7% 15.9%;
  --secondary-foreground: 0 0% 98%;
  --muted: 0 0% 15%;
  --muted-foreground: 240 5% 64.9%;
  --accent: 12 6.5% 15.1%;
  --accent-foreground: 0 0% 98%;
  --destructive: 0 62.8% 30.6%;
  --destructive-foreground: 0 85.7% 97.3%;
  --border: 240 3.7% 15.9%;
  --input: 240 3.7% 15.9%;
  --ring: 142.4 71.8% 29.2%;
}

* {
  border-color: hsl(var(--border));
}

body {
  background-color: hsl(var(--background));
  color: hsl(var(--foreground));
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: rgb(23 23 23 / var(--tw-text-opacity));
}

:is(.dark body) {
  --tw-bg-opacity: 1;
  background-color: rgb(0 0 0 / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

body {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-size: 16px;
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

.container {
  width: 100%;
  margin-right: auto;
  margin-left: auto;
  padding-right: 2rem;
  padding-left: 2rem;
}

@media (min-width: 1400px) {
  .container {
    max-width: 1400px;
  }
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.fixed {
  position: fixed;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.inset-0 {
  inset: 0px;
}

.bottom-6 {
  bottom: 1.5rem;
}

.left-0 {
  left: 0px;
}

.left-\[50\%\] {
  left: 50%;
}

.right-0 {
  right: 0px;
}

.right-4 {
  right: 1rem;
}

.right-6 {
  right: 1.5rem;
}

.top-0 {
  top: 0px;
}

.top-4 {
  top: 1rem;
}

.top-\[50\%\] {
  top: 50%;
}

.z-10 {
  z-index: 10;
}

.z-50 {
  z-index: 50;
}

.z-\[99999\] {
  z-index: 99999;
}

.z-\[999\] {
  z-index: 999;
}

.col-\[1\/-1\] {
  grid-column: 1/-1;
}

.m-1 {
  margin: 0.25rem;
}

.mx-1 {
  margin-left: 0.25rem;
  margin-right: 0.25rem;
}

.mx-2 {
  margin-left: 0.5rem;
  margin-right: 0.5rem;
}

.mx-auto {
  margin-left: auto;
  margin-right: auto;
}

.my-1 {
  margin-top: 0.25rem;
  margin-bottom: 0.25rem;
}

.my-8 {
  margin-top: 2rem;
  margin-bottom: 2rem;
}

.mb-1 {
  margin-bottom: 0.25rem;
}

.mb-8 {
  margin-bottom: 2rem;
}

.mr-1 {
  margin-right: 0.25rem;
}

.mt-1 {
  margin-top: 0.25rem;
}

.mt-2 {
  margin-top: 0.5rem;
}

.mt-20 {
  margin-top: 5rem;
}

.mt-4 {
  margin-top: 1rem;
}

.mt-8 {
  margin-top: 2rem;
}

.block {
  display: block;
}

.inline-block {
  display: inline-block;
}

.inline {
  display: inline;
}

.flex {
  display: flex;
}

.inline-flex {
  display: inline-flex;
}

.table {
  display: table;
}

.grid {
  display: grid;
}

.contents {
  display: contents;
}

.hidden {
  display: none;
}

.aspect-square {
  aspect-ratio: 1 / 1;
}

.h-10 {
  height: 2.5rem;
}

.h-3 {
  height: 0.75rem;
}

.h-4 {
  height: 1rem;
}

.h-5 {
  height: 1.25rem;
}

.h-6 {
  height: 1.5rem;
}

.h-8 {
  height: 2rem;
}

.h-9 {
  height: 2.25rem;
}

.h-\[1px\] {
  height: 1px;
}

.h-full {
  height: 100%;
}

.max-h-\[min\(80vh\2c 24rem\)\] {
  max-height: min(80vh,24rem);
}

.\!min-h-8 {
  min-height: 2rem !important;
}

.min-h-8 {
  min-height: 2rem;
}

.min-h-\[1\.5rem\] {
  min-height: 1.5rem;
}

.min-h-\[60px\] {
  min-height: 60px;
}

.min-h-full {
  min-height: 100%;
}

.w-0 {
  width: 0px;
}

.w-10 {
  width: 2.5rem;
}

.w-3 {
  width: 0.75rem;
}

.w-4 {
  width: 1rem;
}

.w-5 {
  width: 1.25rem;
}

.w-6 {
  width: 1.5rem;
}

.w-72 {
  width: 18rem;
}

.w-8 {
  width: 2rem;
}

.w-80 {
  width: 20rem;
}

.w-9 {
  width: 2.25rem;
}

.w-\[1px\] {
  width: 1px;
}

.w-auto {
  width: auto;
}

.w-full {
  width: 100%;
}

.min-w-0 {
  min-width: 0px;
}

.min-w-8 {
  min-width: 2rem;
}

.min-w-\[1\.5rem\] {
  min-width: 1.5rem;
}

.min-w-\[16rem\] {
  min-width: 16rem;
}

.min-w-\[2rem\] {
  min-width: 2rem;
}

.max-w-lg {
  max-width: 32rem;
}

.flex-1 {
  flex: 1 1 0%;
}

.flex-none {
  flex: none;
}

.shrink-0 {
  flex-shrink: 0;
}

.translate-x-\[-50\%\] {
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-y-\[-50\%\] {
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.cursor-default {
  cursor: default;
}

.cursor-not-allowed {
  cursor: not-allowed;
}

.select-none {
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}

.grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}

.grid-cols-2 {
  grid-template-columns: repeat(2, minmax(0, 1fr));
}

.flex-row {
  flex-direction: row;
}

.flex-col {
  flex-direction: column;
}

.flex-col-reverse {
  flex-direction: column-reverse;
}

.flex-wrap {
  flex-wrap: wrap;
}

.items-start {
  align-items: flex-start;
}

.items-center {
  align-items: center;
}

.justify-start {
  justify-content: flex-start;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.gap-0 {
  gap: 0px;
}

.gap-0\.5 {
  gap: 0.125rem;
}

.gap-1 {
  gap: 0.25rem;
}

.gap-2 {
  gap: 0.5rem;
}

.gap-4 {
  gap: 1rem;
}

.gap-8 {
  gap: 2rem;
}

.gap-x-1 {
  -moz-column-gap: 0.25rem;
       column-gap: 0.25rem;
}

.gap-x-1\.5 {
  -moz-column-gap: 0.375rem;
       column-gap: 0.375rem;
}

.space-y-1 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.25rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.25rem * var(--tw-space-y-reverse));
}

.space-y-1\.5 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.375rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.375rem * var(--tw-space-y-reverse));
}

.space-y-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.5rem * var(--tw-space-y-reverse));
}

.space-y-8 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(2rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(2rem * var(--tw-space-y-reverse));
}

.overflow-auto {
  overflow: auto;
}

.overflow-hidden {
  overflow: hidden;
}

.overflow-y-auto {
  overflow-y: auto;
}

.overflow-x-hidden {
  overflow-x: hidden;
}

.whitespace-nowrap {
  white-space: nowrap;
}

.rounded {
  border-radius: 0.25rem;
}

.rounded-full {
  border-radius: 9999px;
}

.rounded-lg {
  border-radius: var(--radius);
}

.rounded-md {
  border-radius: calc(var(--radius) - 2px);
}

.rounded-none {
  border-radius: 0px;
}

.rounded-sm {
  border-radius: calc(var(--radius) - 4px);
}

.rounded-l {
  border-top-left-radius: 0.25rem;
  border-bottom-left-radius: 0.25rem;
}

.rounded-r-md {
  border-top-right-radius: calc(var(--radius) - 2px);
  border-bottom-right-radius: calc(var(--radius) - 2px);
}

.border {
  border-width: 1px;
}

.border-0 {
  border-width: 0px;
}

.border-y {
  border-top-width: 1px;
  border-bottom-width: 1px;
}

.border-b {
  border-bottom-width: 1px;
}

.border-b-2 {
  border-bottom-width: 2px;
}

.border-l {
  border-left-width: 1px;
}

.border-r {
  border-right-width: 1px;
}

.border-black {
  --tw-border-opacity: 1;
  border-color: rgb(0 0 0 / var(--tw-border-opacity));
}

.border-input {
  border-color: hsl(var(--input));
}

.border-neutral-100 {
  --tw-border-opacity: 1;
  border-color: rgb(245 245 245 / var(--tw-border-opacity));
}

.border-neutral-200 {
  --tw-border-opacity: 1;
  border-color: rgb(229 229 229 / var(--tw-border-opacity));
}

.border-transparent {
  border-color: transparent;
}

.border-l-neutral-200 {
  --tw-border-opacity: 1;
  border-left-color: rgb(229 229 229 / var(--tw-border-opacity));
}

.border-l-transparent {
  border-left-color: transparent;
}

.border-r-neutral-200 {
  --tw-border-opacity: 1;
  border-right-color: rgb(229 229 229 / var(--tw-border-opacity));
}

.border-r-transparent {
  border-right-color: transparent;
}

.bg-background {
  background-color: hsl(var(--background));
}

.bg-black {
  --tw-bg-opacity: 1;
  background-color: rgb(0 0 0 / var(--tw-bg-opacity));
}

.bg-black\/10 {
  background-color: rgb(0 0 0 / 0.1);
}

.bg-black\/80 {
  background-color: rgb(0 0 0 / 0.8);
}

.bg-blue-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(219 234 254 / var(--tw-bg-opacity));
}

.bg-destructive {
  background-color: hsl(var(--destructive));
}

.bg-gray-200 {
  --tw-bg-opacity: 1;
  background-color: rgb(229 231 235 / var(--tw-bg-opacity));
}

.bg-muted {
  background-color: hsl(var(--muted));
}

.bg-neutral-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(245 245 245 / var(--tw-bg-opacity));
}

.bg-neutral-200 {
  --tw-bg-opacity: 1;
  background-color: rgb(229 229 229 / var(--tw-bg-opacity));
}

.bg-neutral-50 {
  --tw-bg-opacity: 1;
  background-color: rgb(250 250 250 / var(--tw-bg-opacity));
}

.bg-neutral-900 {
  --tw-bg-opacity: 1;
  background-color: rgb(23 23 23 / var(--tw-bg-opacity));
}

.bg-popover {
  background-color: hsl(var(--popover));
}

.bg-primary {
  background-color: hsl(var(--primary));
}

.bg-red-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(239 68 68 / var(--tw-bg-opacity));
}

.bg-secondary {
  background-color: hsl(var(--secondary));
}

.bg-transparent {
  background-color: transparent;
}

.bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

.bg-opacity-10 {
  --tw-bg-opacity: 0.1;
}

.p-0 {
  padding: 0px;
}

.p-1 {
  padding: 0.25rem;
}

.p-1\.5 {
  padding: 0.375rem;
}

.p-2 {
  padding: 0.5rem;
}

.p-4 {
  padding: 1rem;
}

.p-5 {
  padding: 1.25rem;
}

.p-6 {
  padding: 1.5rem;
}

.px-1 {
  padding-left: 0.25rem;
  padding-right: 0.25rem;
}

.px-1\.5 {
  padding-left: 0.375rem;
  padding-right: 0.375rem;
}

.px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.px-2\.5 {
  padding-left: 0.625rem;
  padding-right: 0.625rem;
}

.px-3 {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}

.px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}

.px-8 {
  padding-left: 2rem;
  padding-right: 2rem;
}

.py-0 {
  padding-top: 0px;
  padding-bottom: 0px;
}

.py-0\.5 {
  padding-top: 0.125rem;
  padding-bottom: 0.125rem;
}

.py-1 {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

.py-1\.5 {
  padding-top: 0.375rem;
  padding-bottom: 0.375rem;
}

.py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.py-4 {
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.pl-2 {
  padding-left: 0.5rem;
}

.pl-6 {
  padding-left: 1.5rem;
}

.pr-1 {
  padding-right: 0.25rem;
}

.pr-3 {
  padding-right: 0.75rem;
}

.text-left {
  text-align: left;
}

.text-center {
  text-align: center;
}

.text-\[\.65rem\] {
  font-size: .65rem;
}

.text-\[0\.625rem\] {
  font-size: 0.625rem;
}

.text-\[0\.65rem\] {
  font-size: 0.65rem;
}

.text-\[0\.8rem\] {
  font-size: 0.8rem;
}

.text-lg {
  font-size: 1.125rem;
  line-height: 1.75rem;
}

.text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.text-xs {
  font-size: 0.75rem;
  line-height: 1rem;
}

.font-medium {
  font-weight: 500;
}

.font-semibold {
  font-weight: 600;
}

.uppercase {
  text-transform: uppercase;
}

.italic {
  font-style: italic;
}

.leading-none {
  line-height: 1;
}

.tracking-tight {
  letter-spacing: -0.025em;
}

.tracking-wider {
  letter-spacing: 0.05em;
}

.text-black {
  --tw-text-opacity: 1;
  color: rgb(0 0 0 / var(--tw-text-opacity));
}

.text-blue-800 {
  --tw-text-opacity: 1;
  color: rgb(30 64 175 / var(--tw-text-opacity));
}

.text-destructive {
  color: hsl(var(--destructive));
}

.text-destructive-foreground {
  color: hsl(var(--destructive-foreground));
}

.text-gray-400 {
  --tw-text-opacity: 1;
  color: rgb(156 163 175 / var(--tw-text-opacity));
}

.text-muted-foreground {
  color: hsl(var(--muted-foreground));
}

.text-neutral-400 {
  --tw-text-opacity: 1;
  color: rgb(163 163 163 / var(--tw-text-opacity));
}

.text-neutral-500 {
  --tw-text-opacity: 1;
  color: rgb(115 115 115 / var(--tw-text-opacity));
}

.text-neutral-800 {
  --tw-text-opacity: 1;
  color: rgb(38 38 38 / var(--tw-text-opacity));
}

.text-neutral-900 {
  --tw-text-opacity: 1;
  color: rgb(23 23 23 / var(--tw-text-opacity));
}

.text-popover-foreground {
  color: hsl(var(--popover-foreground));
}

.text-primary {
  color: hsl(var(--primary));
}

.text-primary-foreground {
  color: hsl(var(--primary-foreground));
}

.text-red-500 {
  --tw-text-opacity: 1;
  color: rgb(239 68 68 / var(--tw-text-opacity));
}

.text-secondary-foreground {
  color: hsl(var(--secondary-foreground));
}

.text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.underline-offset-4 {
  text-underline-offset: 4px;
}

.opacity-50 {
  opacity: 0.5;
}

.opacity-70 {
  opacity: 0.7;
}

.shadow {
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-lg {
  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-md {
  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-sm {
  --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.outline-none {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.outline {
  outline-style: solid;
}

.ring-1 {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.ring-ring {
  --tw-ring-color: hsl(var(--ring));
}

.ring-offset-background {
  --tw-ring-offset-color: hsl(var(--background));
}

.filter {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.transition-all {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-colors {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-opacity {
  transition-property: opacity;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.duration-200 {
  transition-duration: 200ms;
}

.duration-300 {
  transition-duration: 300ms;
}

@keyframes enter {
  from {
    opacity: var(--tw-enter-opacity, 1);
    transform: translate3d(var(--tw-enter-translate-x, 0), var(--tw-enter-translate-y, 0), 0) scale3d(var(--tw-enter-scale, 1), var(--tw-enter-scale, 1), var(--tw-enter-scale, 1)) rotate(var(--tw-enter-rotate, 0));
  }
}

@keyframes exit {
  to {
    opacity: var(--tw-exit-opacity, 1);
    transform: translate3d(var(--tw-exit-translate-x, 0), var(--tw-exit-translate-y, 0), 0) scale3d(var(--tw-exit-scale, 1), var(--tw-exit-scale, 1), var(--tw-exit-scale, 1)) rotate(var(--tw-exit-rotate, 0));
  }
}

.duration-200 {
  animation-duration: 200ms;
}

.duration-300 {
  animation-duration: 300ms;
}

.running {
  animation-play-state: running;
}

html,
body {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: rgb(23 23 23 / var(--tw-text-opacity));
}

:is(.dark html),:is(.dark 
body) {
  --tw-bg-opacity: 1;
  background-color: rgb(0 0 0 / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

input::-moz-placeholder, textarea::-moz-placeholder {
  color: rgb(0 0 0 / 0.5);
}

input::placeholder,
textarea::placeholder {
  color: rgb(0 0 0 / 0.5);
}

:is(.dark input)::-moz-placeholder, :is(.dark 
textarea)::-moz-placeholder {
  color: rgb(255 255 255 / 0.4);
}

:is(.dark input)::placeholder,:is(.dark 
textarea)::placeholder {
  color: rgb(255 255 255 / 0.4);
}

input::-webkit-input-placeholder,
textarea::-webkit-input-placeholder {
  color: rgb(0 0 0 / 0.5);
}

:is(.dark input)::-webkit-input-placeholder,:is(.dark 
textarea)::-webkit-input-placeholder {
  color: rgb(255 255 255 / 0.4);
}

input::-moz-placeholder,
textarea::-moz-placeholder {
  color: rgb(0 0 0 / 0.4);
}

:is(.dark input)::-moz-placeholder,:is(.dark 
textarea)::-moz-placeholder {
  color: rgb(255 255 255 / 0.4);
}

.react-colorful {
  width: 100% !important;
}

[data-reference-hidden] {
  opacity: 0;
  pointer-events: none;
}

::-webkit-scrollbar {
  height: 0.25rem;
  width: 0.25rem;
  background-color: rgb(115 115 115 / 0.2);
}

::-webkit-scrollbar-thumb {
  border-radius: 9999px;
  background-color: rgb(115 115 115 / 0.5);
}

input[type="range"] {
  height: 0.625rem;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  border-radius: 0.25rem;
  border-width: 0px;
  --tw-bg-opacity: 1;
  background-color: rgb(229 229 229 / var(--tw-bg-opacity));
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

input[type="range"]:active {
  --tw-bg-opacity: 1;
  background-color: rgb(212 212 212 / var(--tw-bg-opacity));
}

:is(.dark input[type="range"]) {
  --tw-bg-opacity: 1;
  background-color: rgb(64 64 64 / var(--tw-bg-opacity));
}

:is(.dark input[type="range"]:active) {
  --tw-bg-opacity: 1;
  background-color: rgb(82 82 82 / var(--tw-bg-opacity));
}

input[type="range"]::-webkit-slider-thumb {
    height: 1.25rem;
    width: 0.75rem;
    -webkit-appearance: none;
            appearance: none;
    border-radius: 9999px;
    --tw-bg-opacity: 1;
    background-color: rgb(38 38 38 / var(--tw-bg-opacity));
    -webkit-transition-property: all;
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
  }

input[type="range"]::-webkit-slider-thumb:active {
    height: 1.5rem;
    width: 1rem;
    --tw-bg-opacity: 1;
    background-color: rgb(23 23 23 / var(--tw-bg-opacity));
  }

:is(.dark input[type="range"])::-webkit-slider-thumb {
    --tw-bg-opacity: 1;
    background-color: rgb(245 245 245 / var(--tw-bg-opacity));
  }

:is(.dark input[type="range"])::-webkit-slider-thumb:active {
    --tw-bg-opacity: 1;
    background-color: rgb(255 255 255 / var(--tw-bg-opacity));
  }

.file\:border-0::file-selector-button {
  border-width: 0px;
}

.file\:bg-transparent::file-selector-button {
  background-color: transparent;
}

.file\:text-sm::file-selector-button {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.file\:font-medium::file-selector-button {
  font-weight: 500;
}

.placeholder\:text-muted-foreground::-moz-placeholder {
  color: hsl(var(--muted-foreground));
}

.placeholder\:text-muted-foreground::placeholder {
  color: hsl(var(--muted-foreground));
}

.first\:ml-0:first-child {
  margin-left: 0px;
}

.first\:mt-0:first-child {
  margin-top: 0px;
}

.first\:mt-0\.5:first-child {
  margin-top: 0.125rem;
}

.last\:mr-0:last-child {
  margin-right: 0px;
}

.last\:mt-0:last-child {
  margin-top: 0px;
}

.hover\:bg-accent:hover {
  background-color: hsl(var(--accent));
}

.hover\:bg-black\/5:hover {
  background-color: rgb(0 0 0 / 0.05);
}

.hover\:bg-destructive\/90:hover {
  background-color: hsl(var(--destructive) / 0.9);
}

.hover\:bg-gray-200:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(229 231 235 / var(--tw-bg-opacity));
}

.hover\:bg-neutral-100:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(245 245 245 / var(--tw-bg-opacity));
}

.hover\:bg-neutral-50:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(250 250 250 / var(--tw-bg-opacity));
}

.hover\:bg-neutral-800:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(38 38 38 / var(--tw-bg-opacity));
}

.hover\:bg-primary\/90:hover {
  background-color: hsl(var(--primary) / 0.9);
}

.hover\:bg-red-500:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(239 68 68 / var(--tw-bg-opacity));
}

.hover\:bg-secondary\/80:hover {
  background-color: hsl(var(--secondary) / 0.8);
}

.hover\:bg-opacity-20:hover {
  --tw-bg-opacity: 0.2;
}

.hover\:text-accent-foreground:hover {
  color: hsl(var(--accent-foreground));
}

.hover\:text-black:hover {
  --tw-text-opacity: 1;
  color: rgb(0 0 0 / var(--tw-text-opacity));
}

.hover\:text-neutral-700:hover {
  --tw-text-opacity: 1;
  color: rgb(64 64 64 / var(--tw-text-opacity));
}

.hover\:text-neutral-800:hover {
  --tw-text-opacity: 1;
  color: rgb(38 38 38 / var(--tw-text-opacity));
}

.hover\:text-red-500:hover {
  --tw-text-opacity: 1;
  color: rgb(239 68 68 / var(--tw-text-opacity));
}

.hover\:underline:hover {
  text-decoration-line: underline;
}

.hover\:opacity-100:hover {
  opacity: 1;
}

.focus\:bg-gray-200:focus {
  --tw-bg-opacity: 1;
  background-color: rgb(229 231 235 / var(--tw-bg-opacity));
}

.focus\:outline-none:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.focus\:ring-2:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.focus\:ring-ring:focus {
  --tw-ring-color: hsl(var(--ring));
}

.focus\:ring-offset-2:focus {
  --tw-ring-offset-width: 2px;
}

.focus-visible\:outline-none:focus-visible {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.focus-visible\:ring-1:focus-visible {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.focus-visible\:ring-2:focus-visible {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.focus-visible\:ring-ring:focus-visible {
  --tw-ring-color: hsl(var(--ring));
}

.focus-visible\:ring-offset-2:focus-visible {
  --tw-ring-offset-width: 2px;
}

.active\:bg-black\/10:active {
  background-color: rgb(0 0 0 / 0.1);
}

.active\:bg-neutral-200:active {
  --tw-bg-opacity: 1;
  background-color: rgb(229 229 229 / var(--tw-bg-opacity));
}

.active\:bg-neutral-900:active {
  --tw-bg-opacity: 1;
  background-color: rgb(23 23 23 / var(--tw-bg-opacity));
}

.active\:text-neutral-800:active {
  --tw-text-opacity: 1;
  color: rgb(38 38 38 / var(--tw-text-opacity));
}

.disabled\:pointer-events-none:disabled {
  pointer-events: none;
}

.disabled\:cursor-not-allowed:disabled {
  cursor: not-allowed;
}

.disabled\:opacity-50:disabled {
  opacity: 0.5;
}

.peer:disabled ~ .peer-disabled\:cursor-not-allowed {
  cursor: not-allowed;
}

.peer:disabled ~ .peer-disabled\:opacity-70 {
  opacity: 0.7;
}

.data-\[state\=active\]\:bg-background[data-state=active] {
  background-color: hsl(var(--background));
}

.data-\[state\=open\]\:bg-accent[data-state=open] {
  background-color: hsl(var(--accent));
}

.data-\[state\=active\]\:text-foreground[data-state=active] {
  color: hsl(var(--foreground));
}

.data-\[state\=open\]\:text-muted-foreground[data-state=open] {
  color: hsl(var(--muted-foreground));
}

.data-\[state\=active\]\:shadow[data-state=active] {
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.data-\[state\=open\]\:animate-in[data-state=open] {
  animation-name: enter;
  animation-duration: 150ms;
  --tw-enter-opacity: initial;
  --tw-enter-scale: initial;
  --tw-enter-rotate: initial;
  --tw-enter-translate-x: initial;
  --tw-enter-translate-y: initial;
}

.data-\[state\=closed\]\:animate-out[data-state=closed] {
  animation-name: exit;
  animation-duration: 150ms;
  --tw-exit-opacity: initial;
  --tw-exit-scale: initial;
  --tw-exit-rotate: initial;
  --tw-exit-translate-x: initial;
  --tw-exit-translate-y: initial;
}

.data-\[state\=closed\]\:fade-out-0[data-state=closed] {
  --tw-exit-opacity: 0;
}

.data-\[state\=open\]\:fade-in-0[data-state=open] {
  --tw-enter-opacity: 0;
}

.data-\[state\=closed\]\:zoom-out-95[data-state=closed] {
  --tw-exit-scale: .95;
}

.data-\[state\=open\]\:zoom-in-95[data-state=open] {
  --tw-enter-scale: .95;
}

.data-\[side\=bottom\]\:slide-in-from-top-2[data-side=bottom] {
  --tw-enter-translate-y: -0.5rem;
}

.data-\[side\=left\]\:slide-in-from-right-2[data-side=left] {
  --tw-enter-translate-x: 0.5rem;
}

.data-\[side\=right\]\:slide-in-from-left-2[data-side=right] {
  --tw-enter-translate-x: -0.5rem;
}

.data-\[side\=top\]\:slide-in-from-bottom-2[data-side=top] {
  --tw-enter-translate-y: 0.5rem;
}

.data-\[state\=closed\]\:slide-out-to-left-1\/2[data-state=closed] {
  --tw-exit-translate-x: -50%;
}

.data-\[state\=closed\]\:slide-out-to-top-\[48\%\][data-state=closed] {
  --tw-exit-translate-y: -48%;
}

.data-\[state\=open\]\:slide-in-from-left-1\/2[data-state=open] {
  --tw-enter-translate-x: -50%;
}

.data-\[state\=open\]\:slide-in-from-top-\[48\%\][data-state=open] {
  --tw-enter-translate-y: -48%;
}

:is(.dark .dark\:border-neutral-800) {
  --tw-border-opacity: 1;
  border-color: rgb(38 38 38 / var(--tw-border-opacity));
}

:is(.dark .dark\:border-neutral-900) {
  --tw-border-opacity: 1;
  border-color: rgb(23 23 23 / var(--tw-border-opacity));
}

:is(.dark .dark\:border-white) {
  --tw-border-opacity: 1;
  border-color: rgb(255 255 255 / var(--tw-border-opacity));
}

:is(.dark .dark\:border-l-neutral-800) {
  --tw-border-opacity: 1;
  border-left-color: rgb(38 38 38 / var(--tw-border-opacity));
}

:is(.dark .dark\:border-r-neutral-800) {
  --tw-border-opacity: 1;
  border-right-color: rgb(38 38 38 / var(--tw-border-opacity));
}

:is(.dark .dark\:bg-black) {
  --tw-bg-opacity: 1;
  background-color: rgb(0 0 0 / var(--tw-bg-opacity));
}

:is(.dark .dark\:bg-blue-800) {
  --tw-bg-opacity: 1;
  background-color: rgb(30 64 175 / var(--tw-bg-opacity));
}

:is(.dark .dark\:bg-neutral-300) {
  --tw-bg-opacity: 1;
  background-color: rgb(212 212 212 / var(--tw-bg-opacity));
}

:is(.dark .dark\:bg-neutral-800) {
  --tw-bg-opacity: 1;
  background-color: rgb(38 38 38 / var(--tw-bg-opacity));
}

:is(.dark .dark\:bg-neutral-900) {
  --tw-bg-opacity: 1;
  background-color: rgb(23 23 23 / var(--tw-bg-opacity));
}

:is(.dark .dark\:bg-white) {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

:is(.dark .dark\:bg-white\/20) {
  background-color: rgb(255 255 255 / 0.2);
}

:is(.dark .dark\:bg-zinc-800) {
  --tw-bg-opacity: 1;
  background-color: rgb(39 39 42 / var(--tw-bg-opacity));
}

:is(.dark .dark\:text-black) {
  --tw-text-opacity: 1;
  color: rgb(0 0 0 / var(--tw-text-opacity));
}

:is(.dark .dark\:text-blue-100) {
  --tw-text-opacity: 1;
  color: rgb(219 234 254 / var(--tw-text-opacity));
}

:is(.dark .dark\:text-gray-400) {
  --tw-text-opacity: 1;
  color: rgb(156 163 175 / var(--tw-text-opacity));
}

:is(.dark .dark\:text-neutral-200) {
  --tw-text-opacity: 1;
  color: rgb(229 229 229 / var(--tw-text-opacity));
}

:is(.dark .dark\:text-neutral-400) {
  --tw-text-opacity: 1;
  color: rgb(163 163 163 / var(--tw-text-opacity));
}

:is(.dark .dark\:text-neutral-600) {
  --tw-text-opacity: 1;
  color: rgb(82 82 82 / var(--tw-text-opacity));
}

:is(.dark .dark\:text-red-500) {
  --tw-text-opacity: 1;
  color: rgb(239 68 68 / var(--tw-text-opacity));
}

:is(.dark .dark\:text-white) {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

:is(.dark .dark\:hover\:bg-neutral-200:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(229 229 229 / var(--tw-bg-opacity));
}

:is(.dark .dark\:hover\:bg-neutral-800:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(38 38 38 / var(--tw-bg-opacity));
}

:is(.dark .dark\:hover\:bg-neutral-900:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(23 23 23 / var(--tw-bg-opacity));
}

:is(.dark .dark\:hover\:bg-red-500:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(239 68 68 / var(--tw-bg-opacity));
}

:is(.dark .dark\:hover\:bg-white\/10:hover) {
  background-color: rgb(255 255 255 / 0.1);
}

:is(.dark .dark\:hover\:bg-zinc-800:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(39 39 42 / var(--tw-bg-opacity));
}

:is(.dark .dark\:hover\:bg-opacity-20:hover) {
  --tw-bg-opacity: 0.2;
}

:is(.dark .dark\:hover\:text-neutral-200:hover) {
  --tw-text-opacity: 1;
  color: rgb(229 229 229 / var(--tw-text-opacity));
}

:is(.dark .dark\:hover\:text-neutral-300:hover) {
  --tw-text-opacity: 1;
  color: rgb(212 212 212 / var(--tw-text-opacity));
}

:is(.dark .dark\:hover\:text-red-500:hover) {
  --tw-text-opacity: 1;
  color: rgb(239 68 68 / var(--tw-text-opacity));
}

:is(.dark .dark\:focus\:bg-zinc-800:focus) {
  --tw-bg-opacity: 1;
  background-color: rgb(39 39 42 / var(--tw-bg-opacity));
}

:is(.dark .dark\:active\:bg-neutral-300:active) {
  --tw-bg-opacity: 1;
  background-color: rgb(212 212 212 / var(--tw-bg-opacity));
}

:is(.dark .dark\:active\:bg-neutral-700:active) {
  --tw-bg-opacity: 1;
  background-color: rgb(64 64 64 / var(--tw-bg-opacity));
}

:is(.dark .dark\:active\:bg-neutral-800:active) {
  --tw-bg-opacity: 1;
  background-color: rgb(38 38 38 / var(--tw-bg-opacity));
}

:is(.dark .dark\:active\:text-neutral-200:active) {
  --tw-text-opacity: 1;
  color: rgb(229 229 229 / var(--tw-text-opacity));
}

@media (min-width: 640px) {
  .sm\:flex-row {
    flex-direction: row;
  }

  .sm\:justify-end {
    justify-content: flex-end;
  }

  .sm\:space-x-2 > :not([hidden]) ~ :not([hidden]) {
    --tw-space-x-reverse: 0;
    margin-right: calc(0.5rem * var(--tw-space-x-reverse));
    margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));
  }

  .sm\:rounded-lg {
    border-radius: var(--radius);
  }

  .sm\:text-left {
    text-align: left;
  }
}

@media (min-width: 1024px) {
  .lg\:relative {
    position: relative;
  }

  .lg\:h-auto {
    height: auto;
  }

  .lg\:bg-white\/30 {
    background-color: rgb(255 255 255 / 0.3);
  }

  .lg\:backdrop-blur-xl {
    --tw-backdrop-blur: blur(24px);
    -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
            backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
  }

  :is(.dark .lg\:dark\:bg-black\/30) {
    background-color: rgb(0 0 0 / 0.3);
  }
}
