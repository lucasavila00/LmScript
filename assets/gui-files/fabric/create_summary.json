{
  "doc": {
    "type": "doc",
    "content": [
      {
        "type": "authorSelect",
        "attrs": {
          "author": "user"
        }
      },
      {
        "type": "heading",
        "attrs": {
          "level": 1
        },
        "content": [
          {
            "type": "text",
            "text": "IDENTITY and PURPOSE"
          }
        ]
      },
      {
        "type": "paragraph",
        "content": [
          {
            "type": "text",
            "text": "You are an expert content summarizer. You take content in and output a Markdown formatted summary using the format below."
          }
        ]
      },
      {
        "type": "paragraph",
        "content": [
          {
            "type": "text",
            "text": "Take a deep breath and think step by step about how to best accomplish this goal using the following steps."
          }
        ]
      },
      {
        "type": "heading",
        "attrs": {
          "level": 1
        },
        "content": [
          {
            "type": "text",
            "text": "OUTPUT SECTIONS"
          }
        ]
      },
      {
        "type": "bulletList",
        "content": [
          {
            "type": "listItem",
            "content": [
              {
                "type": "paragraph",
                "content": [
                  {
                    "type": "text",
                    "text": "Combine all of your understanding of the content into a single, 20-word sentence in a section called ONE SENTENCE SUMMARY:."
                  }
                ]
              }
            ]
          },
          {
            "type": "listItem",
            "content": [
              {
                "type": "paragraph",
                "content": [
                  {
                    "type": "text",
                    "text": "Output the 10 most important points of the content as a list with no more than 15 words per point into a section called MAIN POINTS:."
                  }
                ]
              }
            ]
          },
          {
            "type": "listItem",
            "content": [
              {
                "type": "paragraph",
                "content": [
                  {
                    "type": "text",
                    "text": "Output a list of the 5 best takeaways from the content in a section called TAKEAWAYS:."
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type": "heading",
        "attrs": {
          "level": 1
        },
        "content": [
          {
            "type": "text",
            "text": "OUTPUT INSTRUCTIONS"
          }
        ]
      },
      {
        "type": "bulletList",
        "content": [
          {
            "type": "listItem",
            "content": [
              {
                "type": "paragraph",
                "content": [
                  {
                    "type": "text",
                    "text": "Create the output using the formatting above."
                  }
                ]
              }
            ]
          },
          {
            "type": "listItem",
            "content": [
              {
                "type": "paragraph",
                "content": [
                  {
                    "type": "text",
                    "text": "You only output human readable Markdown."
                  }
                ]
              }
            ]
          },
          {
            "type": "listItem",
            "content": [
              {
                "type": "paragraph",
                "content": [
                  {
                    "type": "text",
                    "text": "Output numbered lists, not bullets."
                  }
                ]
              }
            ]
          },
          {
            "type": "listItem",
            "content": [
              {
                "type": "paragraph",
                "content": [
                  {
                    "type": "text",
                    "text": "Do not output warnings or notesâ€”just the requested sections."
                  }
                ]
              }
            ]
          },
          {
            "type": "listItem",
            "content": [
              {
                "type": "paragraph",
                "content": [
                  {
                    "type": "text",
                    "text": "Do not repeat items in the output sections."
                  }
                ]
              }
            ]
          },
          {
            "type": "listItem",
            "content": [
              {
                "type": "paragraph",
                "content": [
                  {
                    "type": "text",
                    "text": "Do not start items with the same opening words."
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type": "heading",
        "attrs": {
          "level": 1
        },
        "content": [
          {
            "type": "text",
            "text": "INPUT:"
          }
        ]
      },
      {
        "type": "paragraph",
        "content": [
          {
            "type": "text",
            "text": "INPUT: "
          },
          {
            "type": "variableSelect",
            "attrs": {
              "uuid": "6f1f1cff-5940-4ca9-9924-22f041986a27"
            }
          }
        ]
      },
      {
        "type": "authorSelect",
        "attrs": {
          "author": "assistant"
        }
      },
      {
        "type": "heading",
        "attrs": {
          "level": 2
        },
        "content": [
          {
            "type": "text",
            "text": "ONE SENTENCE SUMMARY:"
          }
        ]
      },
      {
        "type": "paragraph",
        "content": [
          {
            "type": "lmGenerator",
            "attrs": {
              "id": "285de5ae-aa57-416f-835a-47f728c34420",
              "choices": [],
              "type": "generation",
              "max_tokens": 256,
              "name": "summary",
              "stop": [
                "\n"
              ]
            }
          }
        ]
      },
      {
        "type": "heading",
        "attrs": {
          "level": 2
        },
        "content": [
          {
            "type": "text",
            "text": "MAIN POINTS:"
          }
        ]
      },
      {
        "type": "orderedList",
        "attrs": {
          "start": 1
        },
        "content": [
          {
            "type": "listItem",
            "content": [
              {
                "type": "paragraph",
                "content": [
                  {
                    "type": "lmGenerator",
                    "attrs": {
                      "id": "4c501651-598f-4535-a2a5-2878d5fa7ce1",
                      "choices": [],
                      "type": "generation",
                      "max_tokens": 100,
                      "name": "mp1",
                      "stop": [
                        "\n"
                      ]
                    }
                  }
                ]
              }
            ]
          },
          {
            "type": "listItem",
            "content": [
              {
                "type": "paragraph",
                "content": [
                  {
                    "type": "lmGenerator",
                    "attrs": {
                      "id": "53875333-4804-4c66-9ccb-0b49c2131f7e",
                      "choices": [],
                      "type": "generation",
                      "max_tokens": 100,
                      "name": "mp2",
                      "stop": [
                        "\n"
                      ]
                    }
                  }
                ]
              }
            ]
          },
          {
            "type": "listItem",
            "content": [
              {
                "type": "paragraph",
                "content": [
                  {
                    "type": "lmGenerator",
                    "attrs": {
                      "id": "fe991e9e-203b-41d0-b694-fc536cb65556",
                      "choices": [],
                      "type": "generation",
                      "max_tokens": 100,
                      "name": "mp3",
                      "stop": [
                        "\n"
                      ]
                    }
                  }
                ]
              }
            ]
          },
          {
            "type": "listItem",
            "content": [
              {
                "type": "paragraph",
                "content": [
                  {
                    "type": "lmGenerator",
                    "attrs": {
                      "id": "6be2f785-0611-472b-83de-218a3dcdd7cf",
                      "choices": [],
                      "type": "generation",
                      "max_tokens": 100,
                      "name": "mp4",
                      "stop": [
                        "\n"
                      ]
                    }
                  }
                ]
              }
            ]
          },
          {
            "type": "listItem",
            "content": [
              {
                "type": "paragraph",
                "content": [
                  {
                    "type": "lmGenerator",
                    "attrs": {
                      "id": "4476ab20-473b-4b79-a8af-3ecb7b5374ef",
                      "choices": [],
                      "type": "generation",
                      "max_tokens": 100,
                      "name": "mp5",
                      "stop": [
                        "\n"
                      ]
                    }
                  }
                ]
              }
            ]
          },
          {
            "type": "listItem",
            "content": [
              {
                "type": "paragraph",
                "content": [
                  {
                    "type": "lmGenerator",
                    "attrs": {
                      "id": "164cd861-bf49-41f8-b138-ae0db4c32f16",
                      "choices": [],
                      "type": "generation",
                      "max_tokens": 100,
                      "name": "mp6",
                      "stop": [
                        "\n"
                      ]
                    }
                  }
                ]
              }
            ]
          },
          {
            "type": "listItem",
            "content": [
              {
                "type": "paragraph",
                "content": [
                  {
                    "type": "lmGenerator",
                    "attrs": {
                      "id": "d9af76dc-739e-420a-9c59-05b75abb91d4",
                      "choices": [],
                      "type": "generation",
                      "max_tokens": 100,
                      "name": "mp7",
                      "stop": [
                        "\n"
                      ]
                    }
                  }
                ]
              }
            ]
          },
          {
            "type": "listItem",
            "content": [
              {
                "type": "paragraph",
                "content": [
                  {
                    "type": "lmGenerator",
                    "attrs": {
                      "id": "ba17a319-efdb-4c31-b3ef-ee32a6f40816",
                      "choices": [],
                      "type": "generation",
                      "max_tokens": 100,
                      "name": "mp8",
                      "stop": [
                        "\n"
                      ]
                    }
                  }
                ]
              }
            ]
          },
          {
            "type": "listItem",
            "content": [
              {
                "type": "paragraph",
                "content": [
                  {
                    "type": "lmGenerator",
                    "attrs": {
                      "id": "d399b12d-9f26-4e23-8ed5-279929129ed4",
                      "choices": [],
                      "type": "generation",
                      "max_tokens": 100,
                      "name": "mp9",
                      "stop": [
                        "\n"
                      ]
                    }
                  }
                ]
              }
            ]
          },
          {
            "type": "listItem",
            "content": [
              {
                "type": "paragraph",
                "content": [
                  {
                    "type": "lmGenerator",
                    "attrs": {
                      "id": "5351d1e1-7376-4360-b487-d7666200b329",
                      "choices": [],
                      "type": "generation",
                      "max_tokens": 100,
                      "name": "mp10",
                      "stop": [
                        "\n"
                      ]
                    }
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type": "heading",
        "attrs": {
          "level": 2
        },
        "content": [
          {
            "type": "text",
            "text": "TAKEAWAYS:"
          }
        ]
      },
      {
        "type": "orderedList",
        "attrs": {
          "start": 1
        },
        "content": [
          {
            "type": "listItem",
            "content": [
              {
                "type": "paragraph",
                "content": [
                  {
                    "type": "lmGenerator",
                    "attrs": {
                      "id": "12bed642-c0a2-4949-8529-916c28540dbf",
                      "choices": [],
                      "type": "generation",
                      "max_tokens": 100,
                      "name": "take1",
                      "stop": [
                        "\n"
                      ]
                    }
                  }
                ]
              }
            ]
          },
          {
            "type": "listItem",
            "content": [
              {
                "type": "paragraph",
                "content": [
                  {
                    "type": "lmGenerator",
                    "attrs": {
                      "id": "e62fb8e1-d2f8-49f8-ba86-11759983a542",
                      "choices": [],
                      "type": "generation",
                      "max_tokens": 100,
                      "name": "take2",
                      "stop": [
                        "\n"
                      ]
                    }
                  }
                ]
              }
            ]
          },
          {
            "type": "listItem",
            "content": [
              {
                "type": "paragraph",
                "content": [
                  {
                    "type": "lmGenerator",
                    "attrs": {
                      "id": "9d4652da-cb09-45cb-8e05-bed3495ffc8d",
                      "choices": [],
                      "type": "generation",
                      "max_tokens": 100,
                      "name": "take3",
                      "stop": [
                        "\n"
                      ]
                    }
                  }
                ]
              }
            ]
          },
          {
            "type": "listItem",
            "content": [
              {
                "type": "paragraph",
                "content": [
                  {
                    "type": "lmGenerator",
                    "attrs": {
                      "id": "40efca70-c5d8-4315-81d5-4a8ca9cdd903",
                      "choices": [],
                      "type": "generation",
                      "max_tokens": 100,
                      "name": "take4",
                      "stop": [
                        "\n"
                      ]
                    }
                  }
                ]
              }
            ]
          },
          {
            "type": "listItem",
            "content": [
              {
                "type": "paragraph",
                "content": [
                  {
                    "type": "lmGenerator",
                    "attrs": {
                      "id": "3b7fce5b-22ce-46da-8924-431bf8f7c06e",
                      "choices": [],
                      "type": "generation",
                      "max_tokens": 100,
                      "name": "take5",
                      "stop": [
                        "\n"
                      ]
                    }
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "type": "paragraph"
      }
    ]
  },
  "variables": [
    {
      "name": "input",
      "value": "A Turing machine is a mathematical model of computation describing an abstract machine[1] that manipulates symbols on a strip of tape according to a table of rules.[2] Despite the model's simplicity, it is capable of implementing any computer algorithm.[3]\n\nThe machine operates on an infinite[4] memory tape divided into discrete cells,[5] each of which can hold a single symbol drawn from a finite set of symbols called the alphabet of the machine. It has a \"head\" that, at any point in the machine's operation, is positioned over one of these cells, and a \"state\" selected from a finite set of states. At each step of its operation, the head reads the symbol in its cell. Then, based on the symbol and the machine's own present state, the machine writes a symbol into the same cell, and moves the head one step to the left or the right,[6] or halts the computation. The choice of which replacement symbol to write, which direction to move the head, and whether to halt is based on a finite table that specifies what to do for each combination of the current state and the symbol that is read. Like a real computer program, it is possible for a Turing machine to go into an infinite loop which will never halt.\n\nThe Turing machine was invented in 1936 by Alan Turing,[7][8] who called it an \"a-machine\" (automatic machine).[9] It was Turing's doctoral advisor, Alonzo Church, who later coined the term \"Turing machine\" in a review.[10] With this model, Turing was able to answer two questions in the negative:\n\n    Does a machine exist that can determine whether any arbitrary machine on its tape is \"circular\" (e.g., freezes, or fails to continue its computational task)?\n    Does a machine exist that can determine whether any arbitrary machine on its tape ever prints a given symbol?[11][12]\n\nThus by providing a mathematical description of a very simple device capable of arbitrary computations, he was able to prove properties of computation in generalâ€”and in particular, the uncomputability of the Entscheidungsproblem ('decision problem').[13]\n\nTuring machines proved the existence of fundamental limitations on the power of mechanical computation.[14] While they can express arbitrary computations, their minimalist design makes them too slow for computation in practice: real-world computers are based on different designs that, unlike Turing machines, use random-access memory.\n\nTuring completeness is the ability for a computational model or a system of instructions to simulate a Turing machine. A programming language that is Turing complete is theoretically capable of expressing all tasks accomplishable by computers; nearly all programming languages are Turing complete if the limitations of finite memory are ignored.\nOverview[edit]\n\nA Turing machine is an idealised model of a central processing unit (CPU) that controls all data manipulation done by a computer, with the canonical machine using sequential memory to store data. Typically, the sequential memory is represented as a tape of infinite length on which the machine can perform read and write operations.\n\nIn the context of formal language theory, a Turing machine (automaton) is capable of enumerating some arbitrary subset of valid strings of an alphabet. A set of strings which can be enumerated in this manner is called a recursively enumerable language. The Turing machine can equivalently be defined as a model that recognises valid input strings, rather than enumerating output strings.\n\nGiven a Turing machine M and an arbitrary string s, it is generally not possible to decide whether M will eventually produce s. This is due to the fact that the halting problem is unsolvable, which has major implications for the theoretical limits of computing.\n\nThe Turing machine is capable of processing an unrestricted grammar, which further implies that it is capable of robustly evaluating first-order logic in an infinite number of ways. This is famously demonstrated through lambda calculus.\n\nA Turing machine that is able to simulate any other Turing machine is called a universal Turing machine (UTM, or simply a universal machine). Another mathematical formalism, lambda calculus, with a similar \"universal\" nature was introduced by Alonzo Church. Church's work intertwined with Turing's to form the basis for the Churchâ€“Turing thesis. This thesis states that Turing machines, lambda calculus, and other similar formalisms of computation do indeed capture the informal notion of effective methods in logic and mathematics and thus provide a model through which one can reason about an algorithm or \"mechanical procedure\" in a mathematically precise way without being tied to any particular formalism. Studying the abstract properties of Turing machines has yielded many insights into computer science, computability theory, and complexity theory.\nPhysical description[edit]\n\nIn his 1948 essay, \"Intelligent Machinery\", Turing wrote that his machine consisted of:\n\n    ...an unlimited memory capacity obtained in the form of an infinite tape marked out into squares, on each of which a symbol could be printed. At any moment there is one symbol in the machine; it is called the scanned symbol. The machine can alter the scanned symbol, and its behavior is in part determined by that symbol, but the symbols on the tape elsewhere do not affect the behavior of the machine. However, the tape can be moved back and forth through the machine, this being one of the elementary operations of the machine. Any symbol on the tape may therefore eventually have an innings.[15]\n\n    â€”â€ŠTuring 1948, p. 3[16]\n\nDescription[edit]\n\nThe Turing machine mathematically models a machine that mechanically operates on a tape. On this tape are symbols, which the machine can read and write, one at a time, using a tape head. Operation is fully determined by a finite set of elementary instructions such as \"in state 42, if the symbol seen is 0, write a 1; if the symbol seen is 1, change into state 17; in state 17, if the symbol seen is 0, write a 1 and change to state 6;\" etc. In the original article (\"On Computable Numbers, with an Application to the Entscheidungsproblem\", see also references below), Turing imagines not a mechanism, but a person whom he calls the \"computer\", who executes these deterministic mechanical rules slavishly (or as Turing puts it, \"in a desultory manner\").\nThe head is always over a particular square of the tape; only a finite stretch of squares is shown. The instruction to be performed (q4) is shown over the scanned square. (Drawing after Kleene (1952) p. 375.)\nHere, the internal state (q1) is shown inside the head, and the illustration describes the tape as being infinite and pre-filled with \"0\", the symbol serving as blank. The system's full state (its \"complete configuration\") consists of the internal state, any non-blank symbols on the tape (in this illustration \"11B\"), and the position of the head relative to those symbols including blanks, i.e. \"011B\". (Drawing after Minsky (1967) p. 121.)\n\nMore explicitly, a Turing machine consists of:\n\n    A tape divided into cells, one next to the other. Each cell contains a symbol from some finite alphabet. The alphabet contains a special blank symbol (here written as '0') and one or more other symbols. The tape is assumed to be arbitrarily extendable to the left and to the right, so that the Turing machine is always supplied with as much tape as it needs for its computation. Cells that have not been written before are assumed to be filled with the blank symbol. In some models the tape has a left end marked with a special symbol; the tape extends or is indefinitely extensible to the right.\n    A head that can read and write symbols on the tape and move the tape left and right one (and only one) cell at a time. In some models the head moves and the tape is stationary.\n    A state register that stores the state of the Turing machine, one of finitely many. Among these is the special start state with which the state register is initialised. These states, writes Turing, replace the \"state of mind\" a person performing computations would ordinarily be in.\n    A finite table[17] of instructions[18] that, given the state(qi) the machine is currently in and the symbol(aj) it is reading on the tape (symbol currently under the head), tells the machine to do the following in sequence (for the 5-tuple models):\n\n    Either erase or write a symbol (replacing aj with aj1).\n    Move the head (which is described by dk and can have values: 'L' for one step left or 'R' for one step right or 'N' for staying in the same place).\n    Assume the same or a new state as prescribed (go to state qi1).\n\nIn the 4-tuple models, erasing or writing a symbol (aj1) and moving the head left or right (dk) are specified as separate instructions. The table tells the machine to (ia) erase or write a symbol or (ib) move the head left or right, and then (ii) assume the same or a new state as prescribed, but not both actions (ia) and (ib) in the same instruction. In some models, if there is no entry in the table for the current combination of symbol and state, then the machine will halt; other models require all entries to be filled.\n\nEvery part of the machine (i.e. its state, symbol-collections, and used tape at any given time) and its actions (such as printing, erasing and tape motion) is finite, discrete and distinguishable; it is the unlimited amount of tape and runtime that gives it an unbounded amount of storage space.\nFormal definition[edit]\n\nFollowing Hopcroft & Ullman (1979, p. 148), a (one-tape) Turing machine can be formally defined as a 7-tuple {\\displaystyle M=\\langle Q,\\Gamma ,b,\\Sigma ,\\delta ,q_{0},F\\rangle } where\n\n    {\\displaystyle \\Gamma } is a finite, non-empty set of tape alphabet symbols;\n    {\\displaystyle b\\in \\Gamma } is the blank symbol (the only symbol allowed to occur on the tape infinitely often at any step during the computation);\n    {\\displaystyle \\Sigma \\subseteq \\Gamma \\setminus \\{b\\}} is the set of input symbols, that is, the set of symbols allowed to appear in the initial tape contents;\n    {\\displaystyle Q} is a finite, non-empty set of states;\n    {\\displaystyle q_{0}\\in Q} is the initial state;\n    {\\displaystyle F\\subseteq Q} is the set of final states or accepting states. The initial tape contents is said to be accepted by {\\displaystyle M} if it eventually halts in a state from {\\displaystyle F}.\n    {\\displaystyle \\delta :(Q\\setminus F)\\times \\Gamma \\not \\to Q\\times \\Gamma \\times \\{L,R\\}} is a partial function called the transition function, where L is left shift, R is right shift. If {\\displaystyle \\delta } is not defined on the current state and the current tape symbol, then the machine halts;[19] intuitively, the transition function specifies the next state transited from the current state, which symbol to overwrite the current symbol pointed by the head, and the next head movement.\n\n3-state Busy Beaver. Black icons represent location and state of head; square colors represent 1s (orange) and 0s (white); time progresses vertically from the top until the HALT state at the bottom.\n\nA relatively uncommon variant allows \"no shift\", say N, as a third element of the set of directions {\\displaystyle \\{L,R\\}}.\n\nThe 7-tuple for the 3-state busy beaver looks like this (see more about this busy beaver at Turing machine examples):\n\n    {\\displaystyle Q=\\{{\\mbox{A}},{\\mbox{B}},{\\mbox{C}},{\\mbox{HALT}}\\}} (states);\n    {\\displaystyle \\Gamma =\\{0,1\\}} (tape alphabet symbols);\n    {\\displaystyle b=0} (blank symbol);\n    {\\displaystyle \\Sigma =\\{1\\}} (input symbols);\n    {\\displaystyle q_{0}={\\mbox{A}}} (initial state);\n    {\\displaystyle F=\\{{\\mbox{HALT}}\\}} (final states);\n    {\\displaystyle \\delta =} see state-table below (transition function).\n\nInitially all tape cells are marked with {\\displaystyle 0}.\nState table for 3-state, 2-symbol busy beaver Tape symbol \tCurrent state A \tCurrent state B \tCurrent state C\nWrite symbol \tMove tape \tNext state \tWrite symbol \tMove tape \tNext state \tWrite symbol \tMove tape \tNext state\n0 \t1 \tR \tB \t1 \tL \tA \t1 \tL \tB\n1 \t1 \tL \tC \t1 \tR \tB \t1 \tR \tHALT\nAdditional details required to visualise or implement Turing machines[edit]\n\nIn the words of van Emde Boas (1990), p. 6: \"The set-theoretical object [his formal seven-tuple description similar to the above] provides only partial information on how the machine will behave and what its computations will look like.\"\n\nFor instance,\n\n    There will need to be many decisions on what the symbols actually look like, and a failproof way of reading and writing symbols indefinitely.\n    The shift left and shift right operations may shift the tape head across the tape, but when actually building a Turing machine it is more practical to make the tape slide back and forth under the head instead.\n    The tape can be finite, and automatically extended with blanks as needed (which is closest to the mathematical definition), but it is more common to think of it as stretching infinitely at one or both ends and being pre-filled with blanks except on the explicitly given finite fragment the tape head is on. (This is, of course, not implementable in practice.) The tape cannot be fixed in length, since that would not correspond to the given definition and would seriously limit the range of computations the machine can perform to those of a linear bounded automaton if the tape was proportional to the input size, or finite-state machine if it was strictly fixed-length.\n\nAlternative definitions[edit]\n\nDefinitions in literature sometimes differ slightly, to make arguments or proofs easier or clearer, but this is always done in such a way that the resulting machine has the same computational power. For example, the set could be changed from {\\displaystyle \\{L,R\\}} to {\\displaystyle \\{L,R,N\\}}, where N (\"None\" or \"No-operation\") would allow the machine to stay on the same tape cell instead of moving left or right. This would not increase the machine's computational power.\n\nThe most common convention represents each \"Turing instruction\" in a \"Turing table\" by one of nine 5-tuples, per the convention of Turing/Davis (Turing (1936) in The Undecidable, p. 126â€“127 and Davis (2000) p. 152):\n\n    (definition 1): (qi, Sj, Sk/E/N, L/R/N, qm)\n\n        ( current state qi , symbol scanned Sj , print symbol Sk/erase E/none N , move_tape_one_square left L/right R/none N , new state qm )\n\nOther authors (Minsky (1967) p. 119, Hopcroft and Ullman (1979) p. 158, Stone (1972) p. 9) adopt a different convention, with new state qm listed immediately after the scanned symbol Sj:\n\n    (definition 2): (qi, Sj, qm, Sk/E/N, L/R/N)\n\n        ( current state qi , symbol scanned Sj , new state qm , print symbol Sk/erase E/none N , move_tape_one_square left L/right R/none N )\n\nFor the remainder of this article \"definition 1\" (the Turing/Davis convention) will be used.\nExample: state table for the 3-state 2-symbol busy beaver reduced to 5-tuples Current state \tScanned symbol \t\tPrint symbol \tMove tape \tFinal (i.e. next) state \t5-tuples\nA \t0 \t\t1 \tR \tB \t(A, 0, 1, R, B)\nA \t1 \t\t1 \tL \tC \t(A, 1, 1, L, C)\nB \t0 \t\t1 \tL \tA \t(B, 0, 1, L, A)\nB \t1 \t\t1 \tR \tB \t(B, 1, 1, R, B)\nC \t0 \t\t1 \tL \tB \t(C, 0, 1, L, B)\nC \t1 \t\t1 \tN \tH \t(C, 1, 1, N, H)\n\nIn the following table, Turing's original model allowed only the first three lines that he called N1, N2, N3 (cf. Turing in The Undecidable, p. 126). He allowed for erasure of the \"scanned square\" by naming a 0th symbol S0 = \"erase\" or \"blank\", etc. However, he did not allow for non-printing, so every instruction-line includes \"print symbol Sk\" or \"erase\" (cf. footnote 12 in Post (1947), The Undecidable, p. 300). The abbreviations are Turing's (The Undecidable, p. 119). Subsequent to Turing's original paper in 1936â€“1937, machine-models have allowed all nine possible types of five-tuples:\n\tCurrent m-configuration\n(Turing state) \tTape symbol \tPrint-operation \tTape-motion \tFinal m-configuration\n(Turing state) \t5-tuple \t5-tuple comments \t4-tuple\nN1 \tqi \tSj \tPrint(Sk) \tLeft L \tqm \t(qi, Sj, Sk, L, qm) \t\"blank\" = S0, 1=S1, etc. \t\nN2 \tqi \tSj \tPrint(Sk) \tRight R \tqm \t(qi, Sj, Sk, R, qm) \t\"blank\" = S0, 1=S1, etc. \t\nN3 \tqi \tSj \tPrint(Sk) \tNone N \tqm \t(qi, Sj, Sk, N, qm) \t\"blank\" = S0, 1=S1, etc. \t(qi, Sj, Sk, qm)\n4 \tqi \tSj \tNone N \tLeft L \tqm \t(qi, Sj, N, L, qm) \t\t(qi, Sj, L, qm)\n5 \tqi \tSj \tNone N \tRight R \tqm \t(qi, Sj, N, R, qm) \t\t(qi, Sj, R, qm)\n6 \tqi \tSj \tNone N \tNone N \tqm \t(qi, Sj, N, N, qm) \tDirect \"jump\" \t(qi, Sj, N, qm)\n7 \tqi \tSj \tErase \tLeft L \tqm \t(qi, Sj, E, L, qm) \t\t\n8 \tqi \tSj \tErase \tRight R \tqm \t(qi, Sj, E, R, qm) \t\t\n9 \tqi \tSj \tErase \tNone N \tqm \t(qi, Sj, E, N, qm) \t\t(qi, Sj, E, qm)\n\nAny Turing table (list of instructions) can be constructed from the above nine 5-tuples. For technical reasons, the three non-printing or \"N\" instructions (4, 5, 6) can usually be dispensed with. For examples see Turing machine examples.\n\nLess frequently the use of 4-tuples are encountered: these represent a further atomization of the Turing instructions (cf. Post (1947), Boolos & Jeffrey (1974, 1999), Davis-Sigal-Weyuker (1994)); also see more at Postâ€“Turing machine.\nThe \"state\"[edit]\n\nThe word \"state\" used in context of Turing machines can be a source of confusion, as it can mean two things. Most commentators after Turing have used \"state\" to mean the name/designator of the current instruction to be performedâ€”i.e. the contents of the state register. But Turing (1936) made a strong distinction between a record of what he called the machine's \"m-configuration\", and the machine's (or person's) \"state of progress\" through the computationâ€”the current state of the total system. What Turing called \"the state formula\" includes both the current instruction and all the symbols on the tape:\n\n    Thus the state of progress of the computation at any stage is completely determined by the note of instructions and the symbols on the tape. That is, the state of the system may be described by a single expression (sequence of symbols) consisting of the symbols on the tape followed by Î” (which is supposed to not to appear elsewhere) and then by the note of instructions. This expression is called the \"state formula\".\n\n    â€”â€ŠThe Undecidable, pp. 139â€“140, emphasis added\n\nEarlier in his paper Turing carried this even further: he gives an example where he placed a symbol of the current \"m-configuration\"â€”the instruction's labelâ€”beneath the scanned square, together with all the symbols on the tape (The Undecidable, p. 121); this he calls \"the complete configuration\" (The Undecidable, p. 118). To print the \"complete configuration\" on one line, he places the state-label/m-configuration to the left of the scanned symbol.\n\nA variant of this is seen in Kleene (1952) where Kleene shows how to write the GÃ¶del number of a machine's \"situation\": he places the \"m-configuration\" symbol q4 over the scanned square in roughly the center of the 6 non-blank squares on the tape (see the Turing-tape figure in this article) and puts it to the right of the scanned square. But Kleene refers to \"q4\" itself as \"the machine state\" (Kleene, p. 374â€“375). Hopcroft and Ullman call this composite the \"instantaneous description\" and follow the Turing convention of putting the \"current state\" (instruction-label, m-configuration) to the left of the scanned symbol (p. 149), that is, the instantaneous description is the composite of non-blank symbols to the left, state of the machine, the current symbol scanned by the head, and the non-blank symbols to the right.\n\nExample: total state of 3-state 2-symbol busy beaver after 3 \"moves\" (taken from example \"run\" in the figure below):\n\n        1A1\n\nThis means: after three moves the tape has ... 000110000 ... on it, the head is scanning the right-most 1, and the state is A. Blanks (in this case represented by \"0\"s) can be part of the total state as shown here: B01; the tape has a single 1 on it, but the head is scanning the 0 (\"blank\") to its left and the state is B.\n\n\"State\" in the context of Turing machines should be clarified as to which is being described: the current instruction, or the list of symbols on the tape together with the current instruction, or the list of symbols on the tape together with the current instruction placed to the left of the scanned symbol or to the right of the scanned symbol.\n\nTuring's biographer Andrew Hodges (1983: 107) has noted and discussed this confusion.\n\"State\" diagrams[edit]\nThe table for the 3-state busy beaver (\"P\" = print/write a \"1\") Tape symbol \tCurrent state A \tCurrent state B \tCurrent state C\n\tWrite symbol \tMove tape \tNext state \tWrite symbol \tMove tape \tNext state \tWrite symbol \tMove tape \tNext state\n0 \tP \tR \tB \tP \tL \tA \tP \tL \tB\n1 \tP \tL \tC \tP \tR \tB \tP \tR \tHALT\nThe \"3-state busy beaver\" Turing machine in a finite-state representation. Each circle represents a \"state\" of the tableâ€”an \"m-configuration\" or \"instruction\". \"Direction\" of a state transition is shown by an arrow. The label (e.g. 0/P,R) near the outgoing state (at the \"tail\" of the arrow) specifies the scanned symbol that causes a particular transition (e.g. 0) followed by a slash /, followed by the subsequent \"behaviors\" of the machine, e.g. \"P print\" then move tape \"R right\". No general accepted format exists. The convention shown is after McClusky (1965), Booth (1967), Hill, and Peterson (1974).\n\nTo the right: the above table as expressed as a \"state transition\" diagram.\n\nUsually large tables are better left as tables (Booth, p. 74). They are more readily simulated by computer in tabular form (Booth, p. 74). However, certain conceptsâ€”e.g. machines with \"reset\" states and machines with repeating patterns (cf. Hill and Peterson p. 244ff)â€”can be more readily seen when viewed as a drawing.\n\nWhether a drawing represents an improvement on its table must be decided by the reader for the particular context.\nThe evolution of the busy beaver's computation starts at the top and proceeds to the bottom.\n\nThe reader should again be cautioned that such diagrams represent a snapshot of their table frozen in time, not the course (\"trajectory\") of a computation through time and space. While every time the busy beaver machine \"runs\" it will always follow the same state-trajectory, this is not true for the \"copy\" machine that can be provided with variable input \"parameters\".\n\nThe diagram \"progress of the computation\" shows the three-state busy beaver's \"state\" (instruction) progress through its computation from start to finish. On the far right is the Turing \"complete configuration\" (Kleene \"situation\", Hopcroftâ€“Ullman \"instantaneous description\") at each step. If the machine were to be stopped and cleared to blank both the \"state register\" and entire tape, these \"configurations\" could be used to rekindle a computation anywhere in its progress (cf. Turing (1936) The Undecidable, pp. 139â€“140). ",
      "uuid": "6f1f1cff-5940-4ca9-9924-22f041986a27"
    }
  ],
  "samplingParams": {
    "temperature": 0.1
  },
  "version": "1"
}